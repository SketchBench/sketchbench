{
  "paragraphs": [
    {
      "user": "anonymous",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1627073275990_859555869",
      "id": "paragraph_1627073275990_859555869",
      "dateCreated": "2021-07-23T20:47:55+0000",
      "status": "FINISHED",
      "focus": true,
      "$$hashKey": "object:2117",
      "text": "# Docker container runs with `zeppelin` user and installs pip packages in user-specific `.local` directory, that's not part of the default `PYTHONPATH`\nimport sys\nsys.path.append('/opt/zeppelin/.local/lib/python3.7/site-packages')",
      "dateUpdated": "2021-07-23T22:22:50+0000",
      "dateFinished": "2021-07-23T20:56:28+0000",
      "dateStarted": "2021-07-23T20:56:21+0000",
      "results": {
        "code": "SUCCESS",
        "msg": []
      }
    },
    {
      "user": "anonymous",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1627073292314_656828845",
      "id": "paragraph_1627073292314_656828845",
      "dateCreated": "2021-07-23T20:48:12+0000",
      "status": "FINISHED",
      "focus": true,
      "$$hashKey": "object:2286",
      "text": "# All required imports to run the notebook\nimport json\nimport sseclient\nimport requests\nimport pandas as pd",
      "dateUpdated": "2021-07-23T22:15:38+0000",
      "dateFinished": "2021-07-23T21:12:12+0000",
      "dateStarted": "2021-07-23T21:12:11+0000",
      "results": {
        "code": "SUCCESS",
        "msg": []
      }
    },
    {
      "user": "anonymous",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1627073816029_1102174803",
      "id": "paragraph_1627073816029_1102174803",
      "dateCreated": "2021-07-23T20:56:56+0000",
      "status": "FINISHED",
      "focus": true,
      "$$hashKey": "object:2659",
      "text": "# Globals\nBULLET_SERVICE_NAME = 'sketchbench-espbench-bullet-web-service'\nBULLET_SERVICE_PORT = '9999'\nBULLET_HTTP_API_ENDPOINT = 'http://{0}:{1}/api/bullet/queries/http-query'.format(BULLET_SERVICE_NAME, BULLET_SERVICE_PORT)\nBULLET_SSE_API_ENDPOINT = 'http://{0}:{1}/api/bullet/queries/sse-query'.format(BULLET_SERVICE_NAME, BULLET_SERVICE_PORT)\n\nREQUEST_HEADERS = {\n    'Content-type': 'text/plain',\n}",
      "dateUpdated": "2021-07-23T20:59:43+0000",
      "dateFinished": "2021-07-23T20:59:43+0000",
      "dateStarted": "2021-07-23T20:59:43+0000",
      "results": {
        "code": "SUCCESS",
        "msg": []
      }
    },
    {
      "user": "anonymous",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1627078524867_1462564514",
      "id": "paragraph_1627078524867_1462564514",
      "dateCreated": "2021-07-23T22:15:24+0000",
      "status": "FINISHED",
      "focus": true,
      "$$hashKey": "object:10147",
      "text": "# Function for pretty-printing a dict/JSON\ndef pretty_print(data):\n    z.show(json.dumps(data, indent=2, sort_keys=True))",
      "dateUpdated": "2021-07-23T22:16:13+0000",
      "dateFinished": "2021-07-23T22:16:13+0000",
      "dateStarted": "2021-07-23T22:16:13+0000",
      "results": {
        "code": "SUCCESS",
        "msg": []
      }
    },
    {
      "user": "anonymous",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1627073936668_2099232657",
      "id": "paragraph_1627073936668_2099232657",
      "dateCreated": "2021-07-23T20:58:56+0000",
      "status": "FINISHED",
      "focus": true,
      "$$hashKey": "object:2752",
      "text": "# Function for blocking HTTP requests\ndef http_request(query):\n    response = requests.post(BULLET_HTTP_API_ENDPOINT, data=query, headers=REQUEST_HEADERS)\n    response_data = response.json()\n    pretty_print(response_data.get('meta', {}))\n    z.show(pd.DataFrame(response_data.get('records', [])))",
      "dateUpdated": "2021-07-23T22:18:05+0000",
      "dateFinished": "2021-07-23T22:18:05+0000",
      "dateStarted": "2021-07-23T22:18:05+0000",
      "results": {
        "code": "SUCCESS",
        "msg": []
      }
    },
    {
      "user": "anonymous",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1627074111627_456611848",
      "id": "paragraph_1627074111627_456611848",
      "dateCreated": "2021-07-23T21:01:51+0000",
      "status": "FINISHED",
      "focus": true,
      "$$hashKey": "object:2867",
      "text": "# Function for Server-Sent Events (SSE)-based streaming requests (e.g. for queries with windows)\ndef sse_request(query):\n    response = requests.post(BULLET_SSE_API_ENDPOINT, data=query, stream=True, headers=REQUEST_HEADERS)\n    sse_client = sseclient.SSEClient(response)\n    all_results = []\n    query_receive_time = float('inf')\n    for sse_event in sse_client.events():\n        # Update table with all results\n        window_results = json.loads(sse_event.data)\n        all_results.extend(window_results.get('records', []))\n        # Update receive time of overall query\n        window_query_receive_time = window_results.get('meta', {}).get('Query', {}).get('Receive Time')\n        query_receive_time = window_query_receive_time if window_query_receive_time < query_receive_time else query_receive_time\n        # Print current window stats\n        z.show(window_results.get('meta', {}).get('Window', {}))\n    # Print query receive time\n    z.show('Query Receive Time: {0}'.format(query_receive_time))\n    # Show overall results\n    z.show(pd.DataFrame(all_results))",
      "dateUpdated": "2021-07-23T22:02:16+0000",
      "dateFinished": "2021-07-23T22:02:16+0000",
      "dateStarted": "2021-07-23T22:02:16+0000",
      "results": {
        "code": "SUCCESS",
        "msg": []
      }
    },
    {
      "user": "anonymous",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1627074388021_160175271",
      "id": "paragraph_1627074388021_160175271",
      "dateCreated": "2021-07-23T21:06:28+0000",
      "status": "FINISHED",
      "focus": true,
      "$$hashKey": "object:3084",
      "text": "%md\n\n## Query 1: Check Sensors\n\n> Calculate avg, min, max, count for the last 1sec for mf01 for monitoring.\n\n**CQL:**\n\n```sql\nSELECT \n  AVG(mf01), \n  MIN(mf01), \n  MAX(mf01), \n  COUNT(mf01) \nFROM \n  STREAM_SENSOR TUMBLING WINDOW 1 SECONDS;\n```",
      "dateUpdated": "2021-07-23T22:27:24+0000",
      "dateFinished": "2021-07-23T22:27:24+0000",
      "dateStarted": "2021-07-23T22:27:24+0000",
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>Query 1: Check Sensors</h2>\n<blockquote>\n<p>Calculate avg, min, max, count for the last 1sec for mf01 for monitoring.</p>\n</blockquote>\n<p><strong>CQL:</strong></p>\n<pre><code class=\"language-sql\">SELECT \n  AVG(mf01), \n  MIN(mf01), \n  MAX(mf01), \n  COUNT(mf01) \nFROM \n  STREAM_SENSOR TUMBLING WINDOW 1 SECONDS;\n</code></pre>\n\n</div>"
          }
        ]
      }
    },
    {
      "user": "anonymous",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "multiBarChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                }
              },
              "commonSetting": {},
              "keys": [
                {
                  "name": "COUNT(*)",
                  "index": 0,
                  "aggr": "sum"
                }
              ],
              "groups": [],
              "values": [
                {
                  "name": "AVG(mf01)",
                  "index": 1,
                  "aggr": "sum"
                }
              ]
            },
            "helium": {}
          },
          "1": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "COUNT(*)": "string",
                      "AVG(mf01)": "string",
                      "MIN(mf01)": "string",
                      "MAX(mf01)": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                },
                "multiBarChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "stackedAreaChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "lineChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                }
              },
              "commonSetting": {},
              "keys": [
                {
                  "name": "COUNT(*)",
                  "index": 0,
                  "aggr": "sum"
                }
              ],
              "groups": [],
              "values": [
                {
                  "name": "AVG(mf01)",
                  "index": 1,
                  "aggr": "sum"
                }
              ]
            },
            "helium": {}
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1627074417073_567825142",
      "id": "paragraph_1627074417073_567825142",
      "dateCreated": "2021-07-23T21:06:57+0000",
      "status": "FINISHED",
      "focus": true,
      "$$hashKey": "object:3184",
      "text": "# Processing stream data for 10 seconds\n\nquery_1_bql = '''\nSELECT \n  AVG(mf01), \n  MIN(mf01), \n  MAX(mf01), \n  COUNT(*) \nFROM \n  STREAM(10000, TIME) WINDOWING TUMBLING(1000, TIME);\n'''\nsse_request(query_1_bql)",
      "dateUpdated": "2021-07-23T22:18:35+0000",
      "dateFinished": "2021-07-23T22:18:46+0000",
      "dateStarted": "2021-07-23T22:18:35+0000",
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "{'Number': 1, 'Emit Time': 1627078718245, 'Expected Emit Time': 1627078718097, 'Name': 'Tumbling'}\n{'Number': 2, 'Emit Time': 1627078719400, 'Expected Emit Time': 1627078719097, 'Name': 'Tumbling'}\n{'Number': 3, 'Emit Time': 1627078723720, 'Expected Emit Time': 1627078720097, 'Name': 'Tumbling'}\n{'Number': 4, 'Emit Time': 1627078723720, 'Expected Emit Time': 1627078721097, 'Name': 'Tumbling'}\n{'Number': 5, 'Emit Time': 1627078723720, 'Expected Emit Time': 1627078722097, 'Name': 'Tumbling'}\n{'Number': 6, 'Emit Time': 1627078723721, 'Expected Emit Time': 1627078723097, 'Name': 'Tumbling'}\n{'Number': 7, 'Emit Time': 1627078724904, 'Expected Emit Time': 1627078724097, 'Name': 'Tumbling'}\n{'Number': 8, 'Emit Time': 1627078726183, 'Expected Emit Time': 1627078725097, 'Name': 'Tumbling'}\nQuery Receive Time: 1627078715512\n"
          },
          {
            "type": "TABLE",
            "data": "COUNT(*)\tAVG(mf01)\tMIN(mf01)\tMAX(mf01)\n1001.0\t13430.314685314685\t12843.0\t14281.0\n1000.0\t13528.394\t13262.0\t14122.0\n1000.0\t13528.977\t13373.0\t13648.0\n4.0\t13612.5\t13609.0\t13618.0\n4.0\t13627.5\t13625.0\t13629.0\n6.0\t13611.5\t13602.0\t13624.0\n985.0\t13514.249746192894\t13420.0\t13638.0\n1000.0\t13454.598\t13292.0\t13557.0\n"
          }
        ]
      }
    },
    {
      "user": "anonymous",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1627074435918_1009489766",
      "id": "paragraph_1627074435918_1009489766",
      "dateCreated": "2021-07-23T21:07:15+0000",
      "status": "FINISHED",
      "focus": true,
      "$$hashKey": "object:3280",
      "text": "%md\n\n## Query 2: Determine Outliers\n\n> Detect outliers based on quantiles as suggested by [Apache DataSketches](https://datasketches.apache.org/docs/Community/Research.html) for anomaly/outlier detection\n\n**CQL:**\n\n```sql\nSELECT \n  QUANTILE(mf01, linear, 11)\nFROM \n  STREAM_SENSOR;\n```",
      "dateUpdated": "2021-07-23T22:14:33+0000",
      "dateFinished": "2021-07-23T22:14:36+0000",
      "dateStarted": "2021-07-23T22:14:33+0000",
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>Query 2: Determine Outliers</h2>\n<blockquote>\n<p>Detect outliers based on quantiles as suggested by <a href=\"https://datasketches.apache.org/docs/Community/Research.html\">Apache DataSketches</a> for anomaly/outlier detection</p>\n</blockquote>\n<p><strong>CQL:</strong></p>\n<pre><code class=\"language-sql\">SELECT \n  QUANTILE(mf01, linear, 11)\nFROM \n  STREAM_SENSOR;\n</code></pre>\n\n</div>"
          }
        ]
      }
    },
    {
      "text": "# Processing stream data for 10 seconds\n\nquery_2_bql = '''\nSELECT \n  QUANTILE(mf01, linear, 11) \nfrom \n  STREAM(10000, TIME);\n'''\nhttp_request(query_2_bql)",
      "user": "anonymous",
      "dateUpdated": "2021-07-23T22:18:24+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {
          "1": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "Value": "string",
                      "Quantile": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1627078338380_618797484",
      "id": "paragraph_1627078338380_618797484",
      "dateCreated": "2021-07-23T22:12:18+0000",
      "status": "FINISHED",
      "focus": true,
      "$$hashKey": "object:10024",
      "dateFinished": "2021-07-23T22:18:24+0000",
      "dateStarted": "2021-07-23T22:18:12+0000",
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "{\n  \"Query\": {\n    \"Finish Time\": 1627078704081,\n    \"ID\": \"6b264349-8224-4a6e-8686-de257ac33aaa\",\n    \"Query String\": \"SELECT QUANTILE(mf01, LINEAR, 11) FROM STREAM(10000, TIME)\",\n    \"Receive Time\": 1627078692933\n  },\n  \"Sketch\": {\n    \"Family\": \"QUANTILES\",\n    \"Items Seen\": 5991,\n    \"Maximum Value\": 14510.0,\n    \"Minimum Value\": 13240.0,\n    \"Normalized Rank Error\": 0.002389303789572841,\n    \"Size\": 32800,\n    \"Was Estimated\": true\n  },\n  \"Window\": {\n    \"Emit Time\": 1627078704080,\n    \"Name\": \"Windowless\",\n    \"Number\": 1\n  }\n}\n"
          },
          {
            "type": "TABLE",
            "data": "Value\tQuantile\n13240.0\t0.0\n13442.0\t0.1\n13490.0\t0.2\n13551.0\t0.3\n13680.0\t0.4\n13728.0\t0.5\n13747.0\t0.6\n13760.0\t0.7\n13777.0\t0.8\n13797.0\t0.9\n14510.0\t1.0\n"
          }
        ]
      }
    },
    {
      "user": "anonymous",
      "progress": 0,
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1627078692889_2128591818",
      "id": "paragraph_1627078692889_2128591818",
      "dateCreated": "2021-07-23T22:18:12+0000",
      "status": "READY",
      "focus": true,
      "$$hashKey": "object:10243"
    }
  ],
  "name": "ESPBench (Bullet)",
  "id": "2GBCSXD7W",
  "defaultInterpreterGroup": "python",
  "version": "0.9.0",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false,
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {},
  "path": "/ESPBench (Bullet)"
}