### Benchmark Control Plane ###

dataIngestion:
  espbench:
    enabled: true
    nodeSelector:
      sketchbench/pool: control-plane
    # 10000 ns interval = 100,000 msg/sec
    # 1000000 ns interval = 1,000 msg /sec
    sendingInterval: 1000000
    sendingIntervalTimeUnit: NANOSECONDS
    duration: 1
    durationTimeUnit: HOURS

bullet:
  enabled: true
  spark: # System Under Test (isolated Spark cluster)
    enabled: true
    image:
      repository: sketchbench/bullet-spark-3.0
      tag: "1.0.4"
      pullPolicy: IfNotPresent
    worker:
      replicaCount: 2
      coreLimit: 7
      nodeSelector:
        sketchbench/pool: system-under-test
      resources:
        requests:
          memory: "30Gi"
          cpu: "7"
        limits:
          memory: "30Gi"
          cpu: "7"
    master:
      nodeSelector:
        sketchbench/pool: system-under-test
      resources:
        requests:
          memory: "30Gi"
          cpu: "7"
        limits:
          memory: "30Gi"
          cpu: "7"
    podAntiAffinitypreset: hard
    metrics:
      enabled: true
      podMonitor:
        enabled: true
  hdfs:
    namenode:
      nodeSelector:
        sketchbench/pool: data-plane
    datanode:
      nodeSelector:
        sketchbench/pool: data-plane
    shell:
      nodeSelector:
        sketchbench/pool: data-plane
  pubsub:
    nodeSelector:
      sketchbench/pool: control-plane
    metrics:
      kafka:
        enabled: true
        nodeSelector:
          sketchbench/pool: observability
      jmx:
        enabled: true
      serviceMonitor:
        enabled: true
    zookeeper:
      nodeSelector:
        sketchbench/pool: data-plane
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
  pubsubMonit:
    deployment:
      nodeSelector:
        sketchbench/pool: observability
  ui:
    nodeSelector:
      sketchbench/pool: control-plane
  webservice:
    nodeSelector:
      sketchbench/pool: control-plane
  sparkBackend:
    executorCores: 7
    executorMemory: 30G
    nodeSelector:
      sketchbench/pool: system-under-test
    resources:
      requests:
        memory: "30Gi"
        cpu: "7"
      limits:
        memory: "30Gi"
        cpu: "7"
    image:
      repository: sketchbench/bullet-spark-3.0
    hdfsUser: hadoop
    hdfs:
      port: 8020
    metrics:
      enabled: true
      podMonitor:
        enabled: true
    config:
      bullet:
        spark:
          dsl:
            data:
              producer:
                enable: true
            deserializer:
              enable: false
        dsl:
          connector:
            class:
              name: com.yahoo.bullet.dsl.connector.KafkaConnector
            kafka:
              topics:
                - SketchBench-1-1
              bootstrap:
                servers:
                  - kafka:9092
          converter:
            class:
              name: com.yahoo.bullet.dsl.converter.JSONBulletRecordConverter
            schema:
              type:
                check:
                  enable: false
          deserializer:
            class:
              name: com.yahoo.bullet.dsl.deserializer.IdentityDeserializer
    dsl:
      schema: |
        {
          "fields": [
            {
              "name": "messageID",
              "type": "INTEGER"
            },
            {
              "name": "ts",
              "type": "STRING"
            },
            {
              "name": "index",
              "type": "LONG"
            },
            {
              "name": "mf01",
              "type": "INTEGER"
            },
            {
              "name": "mf02",
              "type": "INTEGER"
            },
            {
              "name": "mf03",
              "type": "INTEGER"
            },
            {
              "name": "pc13",
              "type": "INTEGER"
            },
            {
              "name": "pc14",
              "type": "INTEGER"
            },
            {
              "name": "pc15",
              "type": "INTEGER"
            },
            {
              "name": "pc25",
              "type": "INTEGER"
            },
            {
              "name": "pc26",
              "type": "INTEGER"
            },
            {
              "name": "pc27",
              "type": "INTEGER"
            },
            {
              "name": "res",
              "type": "INTEGER"
            }
          ]
        }

zeppelin:
  enabled: true
  nodeSelector:
    sketchbench/pool: control-plane
  runMode: local
  interpreters:
    - file
    - md
    - python
    - sh
  metrics:
    enabled: true
    podMonitor:
      enabled: true

### Data Ingestion (isolated Kafka cluster) ###

kafka:
  nodeSelector:
    sketchbench/pool: data-ingestion
  podAntiAffinitypreset: hard
  logRetentionHours: 6
  resources:
    requests:
      memory: "30Gi"
      cpu: "7"
    limits:
      memory: "30Gi"
      cpu: "7"
  metrics:
    kafka:
      enabled: true
      nodeSelector:
        sketchbench/pool: observability
    jmx:
      enabled: true
    serviceMonitor:
      enabled: true
  zookeeper:
    nodeSelector:
      sketchbench/pool: data-plane
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true

### Benchmark Observability Stack ###

kafdrop:
  enabled: true
  deployment:
    nodeSelector:
      sketchbench/pool: observability

tobs:
  enabled: true
  kube-prometheus-stack:
    alertmanager:
      enabled: false # not needed
    grafana:
      nodeSelector:
        sketchbench/pool: observability
    kube-state-metrics:
      nodeSelector:
        sketchbench/pool: observability
    prometheus:
      prometheusSpec:
        nodeSelector:
          sketchbench/pool: observability
        podMonitorSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
    prometheusOperator:
      nodeSelector:
        sketchbench/pool: observability
  promscale:
    maintenance:
      nodeSelector:
        sketchbench/pool: observability
    nodeSelector:
      sketchbench/pool: observability
  timescaledb-single:
    nodeSelector:
      sketchbench/pool: observability
